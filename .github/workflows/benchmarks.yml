name: Bench

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/benchmarks.yml
      - mnist_ezkl/Cargo.lock
      - mnist_ezkl/benches/bench.rs
      - accum_conv_ezkl/Cargo.lock
      - accum_conv_ezkl/benches/bench.rs
      - accum_matmul_overflow_ezkl/host/Cargo.lock
      - accum_matmul_overflow_ezkl-zero/host/benches/bench.rs

env:
  AWS_REGION: us-east-1
  # comma seperated list of instances to start/stop for this action
  INSTANCE_ID: i-0f0f0f0f0f0f0f0f0

jobs:
  start-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Start existing EC2 instance
        run: |
          aws ec2 start-instances --instance-ids ${INSTANCE_ID}
          echo "Waiting for instance to be ready..."
          aws ec2 wait instance-running --instance-ids ${INSTANCE_ID}

  ezkl:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: ['ubuntu-16-shared', 'ubuntu-latest-64-cores']
    needs: start-runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Run MNIST EZKL Benchmarks
        working-directory: ./mnist_ezkl
        if: matrix.runner != 'macos-dedicated'
        env:
          BENCHY_OUTPUT_DIR: '../.benchmarks/${{ matrix.runner }}'
        run: |
          cargo bench -F multi-cpu

      - name: Upload .benchmarks as artifact
        uses: actions/upload-artifact@v3
        with:
          path: .benchmarks/

  clean-up:
    runs-on: ubuntu-latest
    needs: [ezkl]
    if: always()
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Stop EC2 instance
        run: aws ec2 stop-instances --instance-ids ${{ env.INSTANCE_ID }}
